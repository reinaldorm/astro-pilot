---
import PostData from '../components/post/PostData.astro';
import PostTag from '../components/post/PostTag.astro';
import  '@fontsource/inter/400.css'
import  '@fontsource/inter/500.css'
import  '@fontsource/inter/700.css'
import '../styles/global.css'

const { frontmatter } = Astro.props;
const pubDate =  new Intl.DateTimeFormat('en-US', {
    dateStyle: 'long',
}).format(new Date(frontmatter.pubDate))
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />            
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{frontmatter.title}</title>
  </head>
  <body>
    <header class="header">
        <div class="header-info">
            <h1 class="header-title">{frontmatter.title}</h1>
            <h2 class="header-description">{frontmatter.description}</h2>
        </div>
        <img src={frontmatter.image.url} alt={frontmatter.image.alt} class="header-img">
    </header>
    <main class="post">
        <div class="post-content">
            <slot />
        </div>
        <div class="post-info">
            <PostData sep={true} iconURL="/assets/calendar.svg" head="Posted">
                <span style="color: #909090;">{pubDate}</span>
            </PostData>
            <PostData sep={true} iconURL="/assets/tag.svg" head="Tags">
                {frontmatter.tags.map((tag: string) => <PostTag name={tag} />)}
            </PostData>
            <PostData sep={false} iconURL="/assets/pen.svg" head="Author">
                {frontmatter.author}
                <span style="color: #909090;">Frontend Developer</span>
            </PostData>
        </div>
    </main>
    <footer class="footer">
        <a class="footer-link" href="/">
            Go back to home
            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.1667 16.375L7 12M7 12L11.1667 7.625M7 12H17" stroke="#0085FF" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </a>
    </footer>
  </body>
</html>


<style>
    .header {
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .header-title {
        color: #111;
        font-size: 2.25rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .header-description {
        color: #7c7c7c;
        font-size: 1rem;
        font-weight: 400;
    }

    .header-img {
        max-width: 2rem;
    }

    .post {
        display: grid;
        grid-template-columns: 1fr [content-start] 16rem [content-end];
        grid-template-row: auto auto;
        gap: 0rem 4rem;
        align-items: flex-start;
    }

    .post-content {
        grid-column: 1 / 2;
    }

    .post-info {
        grid-column: 2 / -1;
        position: sticky;
        top: 5svh;
    }

    .footer-link {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        text-decoration: none;
        border-bottom: 1px solid #0085FF;
        color: #0085FF;
        max-width: fit-content;
        margin-top: 2rem;
    }

    @keyframes image_load {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    @media screen and (max-width: 640px) {
        .header-title {
            font-size: 1.5rem;
        }

        .header-description {
        }

        .header-img {
           max-width: 1.5rem;
        }

        .post {
            display: block;
        }

        .post-content {
            margin-bottom: 4rem;
        }
    }
</style>

<style is:global>
    .post-content > *:not(:last-child) {
        margin-bottom: 1rem;
    }

    .post-content p code {
        padding: 0.125rem 0.25rem;
        display: inline-block;
        border-radius: 0.125rem;
        background-color: #333;
        color: #fff;
    }

    .post-content p img {
        max-width: 100%;
    }

    .post-content blockquote {
        display: flex;
        gap: 0.5rem;
        align-items: center;
        background-color: #efefff;
        padding: 1rem;
        position: relative;
    }

    .post-content blockquote::before {
        content: "";
        position: absolute;
        left: 0;
        display: block;
        height: 100%;
        width: 0.25rem;
        background-color: rgb(148, 36, 253);
    }

    .post-content pre {
        position: relative;
        padding: 1rem;
        border-radius: 0.125rem;
    }

    .post-content pre .copy {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background: none;
        border: none;
        cursor: pointer;
    }

    .post-content pre .copy:hover {
        opacity: 0.75;
    }

    .post-content pre.copied::before {
        content: "Copied!";
        display: block;
        position: absolute;
        background-color: #00B553;
        padding: 0.125rem 0.5rem;
        border-radius: 0.25rem 0.25rem 0rem 0.25rem;
        color: #fff;
        font-family: system-ui, sans-serif;
        top: 1rem;
        right: 3rem;
        animation: show-up 1s ease;
        font-size: 0.75rem;
        opacity: 0;
    }

    @keyframes show-up {
        0% {
            transform: translateY(100%);
            opacity: 0;
        }

        30%,
        70% {
            transform: translateY(0%);
            opacity: 1;
        }

        100% {
            transform: translateY(-100%);
            opacity: 0;
        }
    }
</style>


<script>
    const code_blocks = document.querySelectorAll("pre");

    function handleCopy(text: string, block: HTMLElement) {
        navigator.clipboard.writeText(text)
        
        if (!block.className.includes("copied")) {
            block.classList.add("copied")
            setTimeout(() => block.classList.remove("copied"), 1250)
        }
    }

    code_blocks.forEach(block => {
        const copyButton = document.createElement("button");
        const copyIcon = document.createElement("img")

        copyIcon.src = "/assets/copy.svg"
        copyIcon.alt = "copy-code"

        copyButton.classList.add("copy")
        copyButton.appendChild(copyIcon)
        copyButton.addEventListener("click", () => handleCopy(block.textContent!, block))

        block.appendChild(copyButton)
    })

</script>
